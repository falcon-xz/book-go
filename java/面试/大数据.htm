<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=GBK" />
<title>大数据</title>
<style>
.table{
	width:100%;
	margin-left:-10px;
}
.table tr td{
	border:1px solid black;
	padding-left:10px;
}

.table2 tr td{
	border:1px solid black;
	text-align:left;
	padding-left:10px;
}


.style1 {
	color: #008000;
}

div{
	padding-left:3%;
}
.divfirst{
	width:96%;
	background-color:#FFCC99;
}
.divnext{
	border-style: dotted;
	border-color: #C0C0C0;
	display:none;
	width:94%;
	margin-left:1%;
}
</style>
<script>
function hoverhidden(obj){
	//obj.nextSibling 获取下一个同辈元素
	var nextObj = obj.nextSibling ;
	if(nextObj.style.display=="block"){
		nextObj.style.display = "" ;
		obj.style.background = "#FFCC99"
	}else{
		nextObj.style.display = "block" ;
		obj.style.background = "#99FFCC"
	}
}
</script>
</head>

<body>
<h2>zookeeper</h2>


<h4></h4>
<div class="divfirst"  onclick="javascript:hoverhidden(this)">
znode 最小存储单元
</div>
<div class="divnext" >
<ul style=" list-style-type: decimal;">
	<li>
		<br/><br/>
		写操作之后的读操作，必须返回该值<br/>
		往一个节点写入数据后，必须同步到其他节点，使读取任一节点都是写入数据<br/><br/>
	</li>
	<li>
		Availability （可用性）<br/><br/>
		是只要收到用户的请求，服务器就必须给出回应<br/>
		往一个节点写入数据后,读取任一节点，必须返回数据，不管数据是修改前还是修改后<br/><br/>
		
	</li>
	<li>
		Partition tolerance （分区容错）<br/><br/>
		一般来说，分区容错无法避免，因此可以认为 CAP 的 P 总是成立。CAP 定理告诉我们，剩下的 C 和 A 无法同时做到<br/>
	</li>
	<li>
	PERSISTENT：持久化ZNode节点，一旦创建这个ZNode点存储的数据不会主动消失，除非是客户端主动的delete。
	</li>
	<li>
	EPHEMERAL：临时ZNode节点，Client连接到Zookeeper Service的时候会建立一个Session，之后用这个Zookeeper连接实例创建该类型的znode，一旦Client关闭了Zookeeper的连接，服务器就会清除Session，然后这个Session建立的ZNode节点都会从命名空间消失。总结就是，这个类型的znode的生命周期是和Client建立的连接一样的。
	</li>
	<li>
	PERSISTENT_SEQUENTIAL：顺序自动编号的ZNode节点，这种znoe节点会根据当前已近存在的ZNode节点编号自动加 1，而且不会随Session断开而消失。
	</li>
	<li>
	EPEMERAL_SEQUENTIAL：临时自动编号节点，ZNode节点编号会自动增加，但是会随Session消失而消失
	</li>
</ul>

</div>


<h4></h4>
<div class="divfirst"  onclick="javascript:hoverhidden(this)">
https://www.cnblogs.com/gossip/p/7237991.html
</div>
<div class="divnext">content
</div>


<h4></h4>
<div class="divfirst"  onclick="javascript:hoverhidden(this)">
test
</div>
<div class="divnext">content
</div>



</body>
</html>
