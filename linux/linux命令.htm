<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>linux详解</title>
<style>
.table{
	width:100%;
	margin-left:10px;
}
.table tr td{
	border:1px solid black;
}

.table2 tr td{
	border:1px solid black;
	text-align:left;
}


.style1 {
	color: #008000;
}


</style>
</head>

<body>
<div>
<!-- 检索部分 -->
<a href="#wjlx">文件类型</a>
</div>

<div>
<!-- 属性介绍 -->
<h4 id="wjlx">文件类型</h4>
<ul style="list-style-type:none;">
	<li>	
		<table class="table2" style="width:80%;margin-left:10px" >
			
			<tr>
				<td style="width:10%">d：</td>
				<td style="width:30%">目录</td>
				<td style="width:10%">l：</td>
				<td style="width:30%">符号链接（指向另一个文件）</td>
			</tr>
			<tr>
				<td style="width:10%">s：</td>
				<td style="width:30%">套接字文件</td>
				<td style="width:10%">b：</td>
				<td style="width:30%">块设备文件</td>
			</tr>
			<tr>
				<td style="width:10%">c：</td>
				<td style="width:30%">字符设备文件</td>
				<td style="width:10%">p：</td>
				<td style="width:30%">命名管道文件</td>
			</tr>
			<tr>
				<td style="width:10%">-：</td>
				<td style="width:30%">普通文件，不属于以上类型</td>
				<td style="width:10%"> </td>
				<td style="width:30%"> </td>
			</tr>


		</table>
	</li>
	

</ul>

<h4 id="step2">匹配字符</h4>
<ul style="list-style-type:none;">
	<li>	
		<table class="table2" style="width:80%;margin-left:10px" >
						<tr>
				<td style="width:10%">*</td>
				<td style="width:30%">任意字符</td>
				<td style="width:10%">？</td>
				<td style="width:30%">单个字符</td>
			</tr>
			<tr>
				<td style="width:10%">[...]/[!...]</td>
				<td style="width:30%">匹配字符和范围</td>
				<td style="width:10%">&nbsp;</td>
				<td style="width:30%">&nbsp;</td>
			</tr>
			

		</table>
	</li>
	

</ul>

<h4 id="step1">正则表达式</h4>
<ul style="list-style-type:none;">
	<li>	
		<table class="table2" style="width:80%;margin-left:10px" >
			<tr>
				<td style="width:10%">^</td>
				<td style="width:30%">只匹配行首</td>
				<td style="width:10%">$</td>
				<td style="width:30%">只匹配行尾</td>
			</tr>
			<tr>
				<td style="width:10%">.</td>
				<td style="width:30%">匹配任意单字符</td>
				<td style="width:10%">*</td>
				<td style="width:30%">单字符紧跟* 匹配0个或多个同字符</td>
			</tr>
			<tr>
				<td colspan="1" style="width:10%">[]</td>
				<td colspan="3" style="width:30%">匹配[]内字符，可以使单字符也可以为序列如[1]、[1-5]、[12345]</td>
			</tr>
			<tr>
				<td colspan="1" style="width:10%">\</td>
				<td colspan="3" style="width:30%">屏蔽元字符的特殊含义，转义字符</td>
			</tr>
			<tr>
				<td colspan="1" style="width:10%">pattern\{n\}</td>
				<td colspan="3" style="width:30%">用来匹配前面pattern出现次数。n为次数</td>
			</tr>
			<tr>
				<td colspan="1" style="width:10%">pattern\{n,\}m</td>
				<td colspan="3" style="width:30%">含义同上，但次数最少为 m</td>
			</tr>
			<tr>
				<td colspan="1" style="width:10%">pattern\{n,m\}</td>
				<td colspan="3" style="width:30%">含义同上，但pattern出现次数在n与m之间</td>
			</tr>
			
			

		</table>
	</li>
	

</ul>



<h4>基本配置文件</h4>
	<table class="table">
		<tr>
			<td style="width:20%">版本信息</td>
			<td style="width:75%">cat /proc/version</td>
		</tr>
		<tr>
			<td style="width:20%">root用户环境变量配置</td>
			<td style="width:75%">cat /etc/profile</td>
		</tr>
		<tr>
			<td style="width:20%">其他用户环境变量</td>
			<td style="width:75%">cat ~/.bash_profile</td>
		</tr>
		<tr>
			<td style="width:20%">磁盘挂载目录配置</td>
			<td style="width:75%">cat /etc/fstab</td>
		</tr>
		<tr>
			<td style="width:20%">主机IP映射关系</td>
			<td style="width:75%">cat /etc/hosts</td>
		</tr>
		<tr>
			<td style="width:20%">IP配置</td>
			<td style="width:75%">cat /etc/sysconfig/network-scripts/ifcfg-etho</td>
		</tr>
		<tr>
			<td style="width:20%">网络情况</td>
			<td style="width:75%">cat /etc/sysconfig/network</td>
		</tr>
		<tr>
			<td style="width:20%">网卡信息（各个版本不一致）</td>
			<td style="width:75%">cat /etc/udev/rules.d/xx-xx.rules</td>
		</tr>
</table>


</div>

<div>
<!-- 指令介绍 -->
<h4>vi 编辑指令</h4>		
<table class="table">
		<tr>
			<td colspan="3" rowspan="8" style="width:15%"><span style="color:green">chmod [who] operator [permission] filename</span></td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">^</td>
			<td colspan="2" rowspan="1"style="width:20%">行首</td>
			<td colspan="2" rowspan="1"style="width:20%">$ </td>
			<td colspan="2" rowspan="1" style="width:20%">行尾</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">（</td>
			<td colspan="2" rowspan="1"style="width:20%">句首</td>
			<td colspan="2" rowspan="1"style="width:20%">） </td>
			<td colspan="2" rowspan="1" style="width:20%">句尾</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">Ctrl+u、Ctrl＋b</td>
			<td colspan="2" rowspan="1"style="width:20%">文件首翻半屏、一屏</td>
			<td colspan="2" rowspan="1"style="width:20%">Ctrl+d、Ctrl+f </td>
			<td colspan="2" rowspan="1" style="width:20%">文件尾翻半屏、一屏</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">i / I</td>
			<td colspan="2" rowspan="1"style="width:20%">当前字符/行首 插入</td>
			<td colspan="2" rowspan="1"style="width:20%">o / O </td>
			<td colspan="2" rowspan="1" style="width:20%">下一行/上一行插入</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">x / dd</td>
			<td colspan="2" rowspan="1"style="width:20%">删除一个字符 /一行</td>
			<td colspan="2" rowspan="1"style="width:20%">dw</td>
			<td colspan="2" rowspan="1" style="width:20%">删除前面空格</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">:set nu </td>
			<td colspan="2" rowspan="1"style="width:20%">设置行号</td>
			<td colspan="2" rowspan="1"style="width:20%">/ xx</td>
			<td colspan="2" rowspan="1" style="width:20%">查找xx字符串 回车 之后 n 下一个</td>
		</tr>

		<tr>
			<td colspan="1" rowspan="1" style="width:13%">Ctrl+G</td>
			<td colspan="2" rowspan="1"style="width:20%">显示行数和位置百分比</td>
			<td colspan="2" rowspan="1"style="width:20%">G</td>
			<td colspan="2" rowspan="1" style="width:20%">最后一行</td>
		</tr>


</table>


<h4>权限 chmod chgrp chown id/group umask ln</h4>		
<table class="table">
		<tr>
			<td colspan="3" rowspan="4" style="width:15%"><span style="color:green">chmod [who] operator [permission] filename</span></td>
		</tr>
		
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">who(可省略)</td>
			<td colspan="4" rowspan="1"style="width:30%">chmod a-x filename </td>
			<td colspan="2" rowspan="1" style="width:28%">收回所有用户执行权限</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">option 操作 + - =</td>
			<td colspan="4" rowspan="1" style="width:30%">chmod g+w filename</td>
			<td colspan="2" rowspan="1" style="width:28%">赋予同组用户写权限</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">permission具体权限 rwx</td>
			<td colspan="4" rowspan="1" style="width:30%">chmod -R go+x filename</td>
			<td colspan="2" rowspan="1" style="width:28%">赋予文件及其下所有文件 同组和其他用户的执行权限</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">chmod mode file</span></td>
			<td colspan="1" rowspan="1" style="width:13%">绝对模式</td>
			<td colspan="4" rowspan="1" style="width:30%">chown 777 file</td>
			<td colspan="2" rowspan="1" style="width:28%">赋予文件所有权限</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">group/id [username]</span></td>
			<td colspan="1" rowspan="1" style="width:13%">查找用户所属组 username 可省</td>
			<td colspan="6" rowspan="1" style="width:50%">group/id username</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">umask</span></td>
			<td colspan="1" rowspan="1" style="width:13%">查询权限反码 </td>
			<td colspan="6" rowspan="1" style="width:50%">002 目录-775 文件-664 <br/> 022 目录-755 文件-664</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">ln [-s] sourcePath targetPath</span></td>
			<td colspan="1" rowspan="1" style="width:13%">在目标目录下生成源 路径/文件 的软连接 权限为777</td>
						<td colspan="4" rowspan="1" style="width:30%">ln [-s] /tmp /var/tmp</td>
			<td colspan="2" rowspan="1" style="width:28%">在/var/tmp 生成了/tmp的软连接</td>

		</tr>
		
</table>

<h4>查询 find xargs</h4>		
<table class="table">
		<tr>
			<td colspan="3" rowspan="4" style="width:15%"><span style="color:green">find pathname -options [-print -exec -ok] filename</span></td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">pathname</td>
			<td colspan="4" rowspan="1"style="width:30%">find . a.txt /find / a.txt</td>
			<td colspan="2" rowspan="1" style="width:28%">在 当前路径下/根目录 查找a.txt</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">-options<br/>
			-name -perm(权限)<br/>
			-mtime -newer<br/>
			-type -size
			</td>
			<td colspan="4" rowspan="1" style="width:30%">find ~ -name 1.txt <br/>
			find . -name "[a-z][0-9].txt" -print<br/><br/>
			find / -perm 777 -print<br/>
			find /tmp -mtime -5 -print<br/><br/>
			find . -newer 1.txt ! 2.txt <br/><br/>
			find . -size +1000c -print
			</td>
			<td colspan="2" rowspan="1" style="width:28%">在$HOME 目录下查找1.txt文件<br/>
			在当前目录查找名字 第一位为字母 第二位为数字的文件 双引号表达式<br/>
			查找权限为777的文件<br/>
			在tmp目录下查找5天内的文件 +5 5天内 -5 5天前<br/>
			查找当前目录 比1文件新且比2文件旧的文件<br/>
			查找文件大小大于1K的文件
			</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">-exec </td>
			<td colspan="4" rowspan="1" style="width:30%">
			find . "*.sh" -exec ls -l {} \;<br/>
			find . "*.sh" -exec {} \;<br/><br/>
			find . -name "*.txt" -print | xargs echo ""
			</td>
			<td colspan="2" rowspan="1" style="width:28%">
			-exec 执行  {} \ 代表查找结果 ls -l 表示位置<br/>
			直接执行查找的结果 {} \;大括号 空格 斜杠 分号<br/><br/>
			将查找的结果 输出到控制台 xargs 为find结果的批量结果</td>
		</tr>
				

		
</table>

<h4>计划任务 后台任务</h4>		
<table class="table">
		
		<tr>
			<td colspan="3" rowspan="3" style="width:15%"><span style="color:green">crontab [-u user] -e -l -r</span></td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">设置环境变量</td>
			<td colspan="6" rowspan="1"style="width:58%">在用户系统文件中加入 EDITOR=vi; 
			export EDITOR 重启 source ,存储在/var/spool/cron/$username</td>

		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">[-u user]可省略 用户名</td>
			<td colspan="2" rowspan="1"style="width:20%">-e edit</td>
			<td colspan="2" rowspan="1"style="width:20%">-l list</td>
			<td colspan="2" rowspan="1"style="width:18%">-r remove</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="2" style="width:15%"><span style="color:green">at [-f script] [-m -l -r] [time] [date]</span></td>
		</tr>
		
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">[-f] 脚本或者命令</td>
			<td colspan="2" rowspan="1"style="width:20%">-m -l -r  mail/list/remove</td>
			<td colspan="2" rowspan="1"style="width:20%">[time] 时间格式</td>
			<td colspan="2" rowspan="1"style="width:18%">[date] 日期格式</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">&</span></td>
			<td colspan="1" rowspan="1" style="width:13%">command &</td>
			<td colspan="6" rowspan="1" style="width:50%">客户端一断都断</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">nohup</span></td>
			<td colspan="1" rowspan="1" style="width:13%">nohup command &</td>
			<td colspan="6" rowspan="1" style="width:50%">相当于起一个服务</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%" class="style1">ps -ef |grep xx</td>
			<td colspan="1" rowspan="1" style="width:13%">查看后台进程</td>
			<td colspan="4" rowspan="1" style="width:30%">ps -ef |grep redis</td>
			<td colspan="2" rowspan="1" style="width:28%">kill -9 进程号</td>
		</tr>
		
				
</table>

<h4>输入输出 echo read cat tee</h4>		
<table class="table">
		
				<tr>
			<td colspan="3" rowspan="2" style="width:15%" class="style1">echo -e 
			(linux转义)</td>
		</tr>
		
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">\c 不换行&nbsp;</td>
			<td colspan="2" rowspan="1"style="width:20%">\f 进纸（换行+缩进）</td>
			<td colspan="2" rowspan="1"style="width:20%">\t tab键</td>
			<td colspan="2" rowspan="1"style="width:18%">\n 换行</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">
			read</span></td>
			<td colspan="1" rowspan="1" style="width:13%">read 控制台输入</td>
			<td colspan="6" rowspan="1" style="width:50%">参数使用空格分隔 参数过多全给最后一个</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">shell 标准输入 0、输出 1、错误 2</span></td>
			<td colspan="1" rowspan="1" style="width:13%">command 1&gt;file<br/>command 2&gt;&gt;file</td>
			<td colspan="6" rowspan="1" style="width:50%">输出重定向到文件<br/>错误追加到文件 </td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">tee</span></td>
			<td colspan="1" rowspan="1" style="width:13%">echo "22" | tee 1.txt</td>
			<td colspan="6" rowspan="1" style="width:50%">重定向至文件并输出到console </td>
		</tr>
				
				
</table>


<h4>命令 组合 控制 &amp;&amp; || (;)</h4>		
<table class="table">
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">
			command1 && command2 </span></td>
			<td colspan="1" rowspan="1" style="width:13%">cp a.txt a/ &amp;&amp; rm -rf a.txt</td>
			<td colspan="6" rowspan="1" style="width:50%">复制成功后，删除源文件</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">
			command1 || command2 </span></td>
			<td colspan="1" rowspan="1" style="width:13%">cp a.txt a/ || rm -rf a.txt</td>
			<td colspan="6" rowspan="1" style="width:50%">复制失败了，删除源文件</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">
			(command1;command2) </span></td>
			<td colspan="1" rowspan="1" style="width:13%">()可以省略</td>
			<td colspan="6" rowspan="1" style="width:50%">顺序执行</td>
		</tr>
				
</table>

<h4>grep 查找</h4>		
<table class="table">
		<tr>
			<td colspan="3" rowspan="6" style="width:15%"><span style="color:green">grep [选项] 正则 [文件]<br/><br/>
				cat [文件] | grep [选项] 正则</span></td>
		</tr>
		<tr>
			<td colspan="1" rowspan="4" style="width:13%">[选项]</td>
	
		</tr>
		<tr>
			
			<td colspan="2" rowspan="1"style="width:20%">-c 匹配行的计数</td>
			<td colspan="2" rowspan="1"style="width:20%">-i 不区分大小写(单字符)</td>
			<td colspan="2" rowspan="1"style="width:18%">-h 查询多文件不显示文件名</td>
		</tr>
		
		<tr>
			
			<td colspan="2" rowspan="1"style="width:20%">-l 查询多文件只显示匹配的文件名</td>
			<td colspan="2" rowspan="1"style="width:20%">-n 显示匹配行及行号</td>
			<td colspan="2" rowspan="1"style="width:18%">-s 不显示不存在或无匹配文本的错误信息</td>
		</tr>
		<tr>
			
			<td colspan="2" rowspan="1"style="width:20%">-v 显示不包含匹配文本的所有行</td>
			<td colspan="2" rowspan="1"style="width:20%">&nbsp;</td>
			<td colspan="2" rowspan="1"style="width:18%">&nbsp;</td>
		</tr>

		<tr>
			
			<td colspan="1" rowspan="1" style="width:13%">正则</td>
			<td colspan="6" rowspan="1" style="width:50%">"xxx/>"代表精确查询</td>
		</tr>
		<tr>
			<td colspan="2" rowspan="1" style="width:7%">例子</td>
			<td colspan="2" rowspan="1" style="width:18%">ll -a |grep ^[^d] 不包括文件夹</td>
			<td colspan="2" rowspan="1" style="width:18%">grep -n "^$" 1.txt 查询空格</td>
			<td colspan="2" rowspan="1" style="width:18%">grep -n "3\{1\}" 1.txt 3出现1次</td>
			<td colspan="2" rowspan="1" style="width:24%">grep -n "4..1" 1.txt 4开头1结尾的4位数</td>
		</tr>
		
				
</table>

<h4>awk文本分析</h4>		
<table class="table">
		<tr>
			<td colspan="3" rowspan="8" style="width:15%"><span style="color:green">awk [-F field-separate] 'command' inputfile<br/><br/>
				cat inputfile | awk [-F field-separate] 'command'</span></td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">[-F field-separate]</td>
			<td colspan="6" rowspan="1" style="width:50%">字段之间的分隔符 默认为空格  同hive load指令</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">正则元字符</td>
			<td colspan="5" rowspan="1"style="width:48%">awk 正则需要用//包裹 如：~/正则/  多了+ 匹配一个或多个字符 ，？匹配出现频率</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">条件操作符</td>
			<td colspan="5" rowspan="1"style="width:48%">< <= >= == != ~匹配 !~不匹配 （适用正则）</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">逻辑操作符</td>
			<td colspan="5" rowspan="1"style="width:48%">&& || and or !</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">内置变量（大写）</td>
			<td colspan="5" rowspan="1"style="width:48%">FILENAME 文件名 、FNR 浏览文件的记录数 等等 </td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">内置字符串函数</td>
			<td colspan="5" rowspan="1"style="width:48%">gsub(r,s) 用s替换r、index(s,t)返回说字符串中t的第一个位置、length(s)返回s长度等等</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">awk脚本</td>
			<td colspan="5" rowspan="1"style="width:48%">第一行用 #!/bin/awk -f</td>
		</tr>
		<tr>
			<td colspan="5"  style="width:45%">cat /etc/passwd |awk  -F ':'  'BEGIN {print "name,shell"} {print $1" ---- "$7} END {print "blue,/bin/nosh"}'</td>
			<td colspan="5"  style="width:45%">BEGIN与END为 awk前后的两个模式 {print 为动作 $0 代表全部 $1代表第一个}</td>
		</tr>
		<tr>
			<td colspan="5"  style="width:45%">cat /etc/passwd |awk  -F ':'  'BEGIN {count=0} {count=count+1;print $1" ---- "$7} END {print count}'</td>
			<td colspan="5"  style="width:45%">自定义了一个count 在BEGIN时初始化，过程中+1 结尾时输出</td>
		</tr>
		<tr>
			<td colspan="5"  style="width:45%"> cat /etc/passwd |awk  -F ':'  'BEGIN {count=0;lengths=0} { if($1~/^r/) {count=count+1;lengths=lengths+length($1);print $1"--" length($1) "--" $7}} END {print "num:"count ",lengthsum:" lengths}'</td>
			<td colspan="5"  style="width:45%">在BEGIN时 自定义了 count 数量 与 lengths匹配r开头的长度 ，匹配正则 r开头的时候 count+1 ,lengths 累加长 ，结尾时输出</td>
		</tr>
</table>
 
<h4>sed 文本处理</h4>		
<table class="table">
		<tr>
			<td colspan="3" rowspan="5" style="width:15%"><span style="color:green">sed [option] 'sed command' inputfile<br/><br/>
				cat inputfile | sed [option] 'sed command'</span></td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%">[option]</td>
			<td colspan="6" rowspan="1" style="width:50%">-n slient模式、-e 指令列模式、-f 使用sed脚本、-r 、<span style="color:red">-i 直接修改 无输出（修改源文件）</span></td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">'sed command'</td>
			<td colspan="6" rowspan="1"style="width:48%">a 增加、c 取代、d 删除、i 插入、p 打印、s 取代、=行号、</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">正则元字符</td>
			<td colspan="6" rowspan="1"style="width:48%">sed 正则需要用//包裹</td>
		</tr>
		
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">sed脚本</td>
			<td colspan="6" rowspan="1"style="width:48%">第一行用 #!/bin/sed -f</td>
		</tr>
		<tr>
			<td colspan="3"  style="width:22%">sed -n p 1.txt、sed -n '1,$'p 1.txt</td>
			<td colspan="2"  style="width:22%">打印全部</td>
			<td colspan="2"  style="width:22%">sed -n '/c$/'= 1.txt</td>
			<td colspan="3"  style="width:22%">打印以c结尾的行号</td>
		</tr>
		<tr>
			<td colspan="3"  style="width:22%">sed -n '/.*t/'p 1.txt</td>
			<td colspan="2"  style="width:22%">打印任意有t的行数据</td>
			<td colspan="2"  style="width:22%">sed '1a hello' 1.txt</td>
			<td colspan="3"  style="width:22%">在第一行后增加hello的输出 输出变 1.txt不变</td>
		</tr>
		<tr>
			<td colspan="3"  style="width:22%">sed '1,3'd 1.txt</td>
			<td colspan="2"  style="width:22%">打印删除了第一行到第三行 删两行的输出 1.txt 无改变</td>
			<td colspan="2"  style="width:22%">sed -i '1,3'd 1.txt</td>
			<td colspan="3"  style="width:22%">物理 删除第一行到第三行 删两行 1.txt 被改变</td>
		</tr>
		<tr>
			<td colspan="3"  style="width:22%">sed  's/two/three/g' 1.txt</td>
			<td colspan="7"  style="width:22%">全文 three 替换 two  源文件不变  g全局替换、p 打印、w 输出定向至文件 sed  's/two/three/w 3.txt' 1.txt  </td>
			
		</tr>
		
		
</table>


<h4>sort 排序</h4>		
<table class="table">
		<tr>
			<td colspan="3" rowspan="7" style="width:15%"><span style="color:green">sort [-o outfile] [选项] infile</span></td>
		</tr>
		<tr>
			<td colspan="1" rowspan="6" style="width:13%">[选项]</td>
	
		</tr>
		<tr>
			
			<td colspan="2" rowspan="1"style="width:20%">-o 输出 </td>
			<td colspan="4" rowspan="1"style="width:39%">保存输出  也可以使用重定向方式</td>
		</tr>
		<tr>
			<td colspan="2" rowspan="1"style="width:20%">-c 测试文件是否分类</td>
			<td colspan="4" rowspan="1"style="width:39%">sort -c 5.txt</td>
		</tr>
		
		
		<tr>
			
			<td colspan="2" rowspan="1"style="width:20%">-m 合并 、-u 去重</td>
			<td colspan="4" rowspan="1"style="width:39%">sort -o 3.txt -m 1.txt 2.txt 、sort -u 3.txt</td>
		</tr>
		<tr>
			
			<td colspan="2" rowspan="1"style="width:20%">-n 以数字排序、(-k -t) 联用 -t 分隔符 -k 分隔之后的域、 -r 降序</td>
			<td colspan="4" rowspan="1"style="width:39%"> cat 1.txt | sed 's/--/-/g' |sort  -nk2 -rnk3 -rk1  -t '-';  1.把1.txt 中所有--改成- 2.并且按-分隔 对域2数字升序后 对域3数字降序 对域1降序 </td>
		</tr>
		
		<tr>
			
			<td colspan="2" rowspan="1"style="width:20%">-r 降序、 -f 忽略大小写、-b 忽略每一行前面的空白部分</td>
			<td colspan="4" rowspan="1"style="width:39%">sort -o 3.txt -m 1.txt 2.txt 、sort -u 3.txt</td>
		</tr>

		
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">
			uniq [option] filename </span></td>
			<td colspan="3" rowspan="1" style="width:30%">-u 只显示不重复行、-d 只显示重复行、-c打印每种重复行数量  </td>
			<td colspan="2" rowspan="1" style="width:24%">uniq -c 1.txt</td>
			<td colspan="2" rowspan="1" style="width:24%">答应重复行数量</td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">
			join [option] file1 file2 </span></td>
			<td colspan="3" rowspan="1" style="width:30%">-a1 左链接 -a2 右链接、-t 分隔符、-j n m 第n个文件的第m域 做链接  </td>
			<td colspan="2" rowspan="1" style="width:24%">join -a1 1.txt 2.txt</td>
			<td colspan="2" rowspan="1" style="width:24%">1.txt 左链接 2.txt </td>
		</tr>
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">
			split [option] file</span></td>
			<td colspan="3" rowspan="1" style="width:30%">-l 按行分隔、-b 按字节分隔、(-d -a)-d数字作为生成文件的后缀 -a长度   </td>
			<td colspan="2" rowspan="1" style="width:24%">split -b 5 -d -a 2 1.txt</td>
			<td colspan="2" rowspan="1" style="width:24%">按5字节分隔 后缀为数字 后缀长度为2 x00 x01 x02</td>
		</tr>
		
		<tr>
			<td colspan="3" rowspan="1" style="width:15%"><span style="color:green">
			dd [option] </span></td>
			<td colspan="3" rowspan="1" style="width:30%">dd if=/dev/zero of=hello.txt bs=100M count=1 </td>
			<td colspan="4" rowspan="1" style="width:48%">生成100M的空文件</td>
		</tr>
		
				
</table>


<h4>压缩</h4>		
<table class="table">
		<tr>
			<td colspan="3" rowspan="5" style="width:15%"><span style="color:green">tar<br/><br/>
				zip</span></td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1" style="width:13%"> tar&nbsp; -zcvf&nbsp; name.tar&nbsp; \目录</td>
			<td colspan="6" rowspan="1" style="width:50%">压缩&nbsp;</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">tar&nbsp; -xvf&nbsp; name.tar </td>
			<td colspan="6" rowspan="1"style="width:48%">解压&nbsp;</td>
		</tr>
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">zip&nbsp; –r&nbsp; name.zip&nbsp; \目录</td>
			<td colspan="6" rowspan="1"style="width:48%">压缩&nbsp;</td>
		</tr>
		
		<tr>
			<td colspan="1" rowspan="1"style="width:10%">unzip&nbsp; name.zip</td>
			<td colspan="6" rowspan="1"style="width:48%">解压&nbsp;</td>
		</tr>
</table>


<h4>创建用户</h4>		
<table class="table">
		<tr>
			<td style="width:20%">增加用户组</td>
			<td style="width:75%">groupadd -g 3000 cloudadmin</td>
		</tr>
		<tr>
			<td style="width:20%">增加用户并指定组</td>
			<td style="width:75%">useradd -u 3001 -g cloudadmin hadoop</td>
		</tr>
		<tr>
			<td style="width:20%"> 修改目录所属组</td>
			<td style="width:75%">chown -R hadoop:cloudadmin /hadoop</td>
		</tr>
		<tr>
			<td style="width:20%">修改hadoop用户密码</td>
			<td style="width:75%">passwd hadoop</td>
		</tr>
		
</table>
<h4>逻辑卷</h4>		
<table class="table">
		<tr>
			<td style="width:20%">初始化物理卷</td>
			<td style="width:75%">fdisk -l 查看未分配的磁盘<br/>
								  pvcreate /dev/sdb(空闲磁盘)	<br/>
								  pvdisplay 查看		
			</td>
		</tr>
		<tr>
			<td style="width:20%">初始化物理卷组</td>
			<td style="width:75%">vgcreate vg名称 /dev/sdb<br/>
								  vgdisplay 查看
			</td>
		</tr>
		<tr>
			<td style="width:20%">初始化逻辑卷</td>
			<td style="width:75%">lvcreate -L 5G -n lv名称 vg名称 （将物理卷组加入到逻辑卷）<br/>
								  lvdisplay 查看</td>
		</tr>
		<tr>
			<td style="width:20%">格式化逻辑分区</td>
			<td style="width:75%">mkfs -t ext4 /dev/vg名称/lv名称</td>
		</tr>
		<tr>
			<td style="width:20%">挂载磁盘
			</td>
			<td style="width:75%">mount /dev/vg名称/lv名称 路径</td>
		</tr>
		<tr>
			<td style="width:20%">磁盘长挂/etc/fstab
			</td>
			<td style="width:75%">/dev/vg名称/lv名称	   路径   磁盘初始化类型	defaults	1	1<br/>
								  /dev/vg/lv01	   /hadoop   ext4	defaults	1	1		
			</td>
		</tr>
</table>

<h4>操作</h4>
<table class="table">
		
		<tr>
			<td style="width:20%"> rm -rf</td>
			<td style="width:75%">删除</td>
		</tr>
		<tr>
			<td style="width:20%">ls -a/ll -a<br/>ll -R path</td>
			<td style="width:75%">查所有文件<br/>查看所有文件（包括子文件）</td>
		</tr>
		<tr>
			<td style="width:20%">touch</td>
			<td style="width:75%">创建文件</td>
		</tr>
		<tr>
			<td style="width:20%">cat</td>
			<td style="width:75%">查看文件</td>
		</tr>
		<tr>
			<td style="width:20%">echo "ss"&quot; &gt;&gt; /etc/profile</td>
			<td style="width:75%">添加ss到/etc/profile尾部</td>
		</tr>
		<tr>
			<td style="width:20%">du -sk ./*</td>
			<td style="width:75%">看当前目录的尺寸</td>
		</tr>
		<tr>
			<td style="width:20%">find . -name 文件名</td>
			<td style="width:75%">查询文件</td>
		</tr>
		<tr>
			<td style="width:20%">locale</td>
			<td style="width:75%">查字符集</td>
		</tr>
		<tr>
			<td style="width:20%">scp -r 位置 IP:/位置</td>
			<td style="width:75%">远程发送代码</td>
		</tr>
		<tr>
			<td style="width:20%">vi</td>
			<td style="width:75%">编辑文件 o下一行  i 插入 dd删除本行 dw删除前面的空格  <br/>
								  :set nu 设置行号 u撤销  :e! 恢复文档初始状态<br/>
								  /搜索 n 下一个 
			</td>
		</tr>
		<tr>
			<td style="width:20%">free -m</td>
			<td style="width:75%">内存M为单位</td>
		</tr>
		<tr>
			<td style="width:20%">top</td>
			<td style="width:75%">服务器性能<br/>
								  cat /proc/cpuinfo | grep c 看CPU
			</td>
		</tr>
		<tr>
			<td style="width:20%">df -kh</td>
			<td style="width:75%">磁盘使用情况<br/>
								  cat /proc/meminfo | grep M
			</td>
		</tr>
		<tr>
			<td style="width:20%">ps -ef |grep redis</td>
			<td style="width:75%">查看包含redis字符串的进程 信息</td>
		</tr>
		<tr>
			<td style="width:20%">netstat -anp | grep port | wc -l</td>
			<td style="width:75%">获得所有链接信息（TCP/UDP/SOCKET） wc -l:连接数</td>
		</tr>
		<tr>
			<td style="width:20%">jps</td>
			<td style="width:75%">jdk1.5之后查看java进程</td>
		</tr>

</table>
<h4 id="step1">系统配置</h4>
<table class="table">
		<tr>
			<td style="width:20%">添加环境变量
			</td>
			<td style="width:75%">vi /etc/profile或者vi ~/.bash_profile<br/>
								  export JAVA_HOME=/usr/java/jdk1.7<br/>
								  export PATH=.:$JAVA_HOME/bin:$PATH<br/>
								  source /etc/profile 或者 ~/.bash_profile
								  </td>
		</tr>
		<tr>
			<td style="width:20%">chkconfig --list|grep 服务</td>
			<td style="width:75%"> --level   等级0表示：表示关机<br/>
     								 等级1表示：单用户模式<br/>
      								 等级2表示：无网络连接的多用户命令行模式<br/>
     								 等级3表示：有网络连接的多用户命令行模式<br/>
      								 等级4表示：不可用<br/>
      								 等级5表示：带图形界面的多用户模式<br/>
      								 等级6表示：重新启动<br/>
      								 chkconfig  iptables/ip6tables   on/off
     		 </td>
		</tr>
		<tr>
			<td style="width:20%">vi /etc/inittab</td>
			<td style="width:75%">#   0 - halt (Do NOT set initdefault to this)          停止(不设initdefault这个)<br/>
								  #   1 - Single user mode              单用户模式<br/>
								  #   2 - Multiuser, without NFS       多用户,没有NFS(相当于没有网络的3)<br/>
								  #   3 - Full multiuser mode            充分多用户模式<br/>
								  #   4 - unused              空闲<br/>
								  #   5 - X11      图形界面<br/>
								  #   6 - reboot (Do NOT set initdefault to this)    重启(不设initdefault这个)<br/>
								  id:3:initdefault:   ----修改这里的参数
			</td>
		</tr>
		<tr>
			<td style="width:20%">服务启停状态</td>
			<td style="width:75%">service 服务名 status或者/etc/init.d/服务名 start </td>
		</tr>
		<tr>
			<td style="width:20%">kill杀掉进程 </td>
			<td style="width:75%">kill 9 进程名 或者 killall 服务名</td>
		</tr>
</table>
</div>
</body>

</html>
